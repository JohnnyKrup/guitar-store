{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub\\\\React\\\\guitar-store\\\\src\\\\components\\\\sign-up\\\\sign-up.component.js\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = () => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Die beiden Passworte stimmen nicht überein.\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(email, password);\n      /**\r\n       * by adding the displayName as an object {displayName}\r\n       * it creates a key: value pair out of it\r\n       */\n\n      createUserProfileDocument(user, {\n        displayName\n      }); // this will clear the form\n\n      setUserCredentials({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Ich habe noch kein Konto\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Mit Email und Passwort anmelden\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    label: \"Benutzername\",\n    onChange: this.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    label: \"Email\",\n    onChange: this.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    label: \"Passwort\",\n    onChange: this.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    label: \"Passwort wiederholen\",\n    onChange: this.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"ANMELDEN\")));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["D:/Coding/GitHub/React/guitar-store/src/components/sign-up/sign-up.component.js"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","user","createUserWithEmailAndPassword","error","console","log","handleChange","name","value","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nimport FormInput from \"../form-input/form-input.component\"\r\nimport CustomButton from \"../custom-button/custom-button.component\"\r\n\r\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\"\r\n\r\nimport \"./sign-up.styles.scss\"\r\n\r\nconst SignUp = () => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  })\r\n  const { displayName, email, password, confirmPassword } = userCredentials\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Die beiden Passworte stimmen nicht überein.\")\r\n      return\r\n    }\r\n\r\n    try {\r\n      const { user } = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      )\r\n\r\n      /**\r\n       * by adding the displayName as an object {displayName}\r\n       * it creates a key: value pair out of it\r\n       */\r\n      createUserProfileDocument(user, { displayName })\r\n\r\n      // this will clear the form\r\n      setUserCredentials({\r\n        displayName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target\r\n\r\n    setUserCredentials({ ...userCredentials, [name]: value })\r\n  }\r\n\r\n  return (\r\n    <div className=\"sign-up\">\r\n      <h2 className=\"title\">Ich habe noch kein Konto</h2>\r\n      <span>Mit Email und Passwort anmelden</span>\r\n      <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          value={displayName}\r\n          label=\"Benutzername\"\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          label=\"Email\"\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          label=\"Passwort\"\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          label=\"Passwort wiederholen\"\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n        <CustomButton type=\"submit\">ANMELDEN</CustomButton>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n"]},"metadata":{},"sourceType":"module"}