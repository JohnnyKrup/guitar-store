{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub\\\\React\\\\guitar-store\\\\client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n/**\n * the <Provider> wraps the whole application,\n * it needs to in order to be able to pass information\n * to every component in the project\n */\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(PersistGate, {\n  persistor: persistor,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 11\n  }\n}))))), document.getElementById(\"root\"));\n/**\n * <Link to=\"/tours\" > in case we don't want a <Link> but a <Button>\n * we can use the \"props.history.push('/tours')\" to achieve the same\n * this gives us more flexibility\n *\n * 3 Main properties to look for when working with rect-router\n * => history\n * => location\n * => match\n *\n * match.url gives us the possibility for dynamic routing, without the need\n * to know the full url path\n * we can just extend it i.e. `${props.match.url}/21`\n */","map":{"version":3,"sources":["D:/Coding/GitHub/React/guitar-store/client/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","PersistGate","store","persistor","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,eAAjC;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA;;;;;;AAKAN,QAAQ,CAACO,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAEC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,CADF,EAUEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF;AAaA","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport { PersistGate } from \"redux-persist/integration/react\"\n\nimport { store, persistor } from \"./redux/store\"\n\nimport \"./index.css\"\nimport App from \"./App\"\n\n/**\n * the <Provider> wraps the whole application,\n * it needs to in order to be able to pass information\n * to every component in the project\n */\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n\n/**\n * <Link to=\"/tours\" > in case we don't want a <Link> but a <Button>\n * we can use the \"props.history.push('/tours')\" to achieve the same\n * this gives us more flexibility\n *\n * 3 Main properties to look for when working with rect-router\n * => history\n * => location\n * => match\n *\n * match.url gives us the possibility for dynamic routing, without the need\n * to know the full url path\n * we can just extend it i.e. `${props.match.url}/21`\n */\n"]},"metadata":{},"sourceType":"module"}