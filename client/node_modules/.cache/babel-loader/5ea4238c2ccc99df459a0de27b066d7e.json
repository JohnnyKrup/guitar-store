{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub\\\\React\\\\guitar-store\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\"; // import \"./cart-dropdown.styles.scss\"\n\nimport { EmptyMessageContainer, CartDropdownContainer, CartItemsContainer } from \"./cart-dropdown.styles\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(CartDropdownContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CartItemsContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, cartItems.length ? cartItems.map(cartItem => {\n  return /*#__PURE__*/React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 18\n    }\n  });\n}) : /*#__PURE__*/React.createElement(EmptyMessageContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }\n}, \"Dein Warenkorb ist leer\")), // .length ? is the same if statement as .length > 0\ncartItems.length ? /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }\n}, \"ZUR KASSE\") : null);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n/**\r\n * HigherOrderComponents can take other HOC (like connect) as an argument\r\n * as HOC always return a component\r\n *\r\n * The order in how these HOC are passed in as arguments matters.\r\n * HOC calls will be evaluated from the inside out, same like math operations\r\n * In this way connect will be evaluated and then passes all its properties to withRouter\r\n * this is what we need, as we are looking for the hostory in withRouter to have access\r\n * to all properties that connect is aware of.\r\n */\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["D:/Coding/GitHub/React/guitar-store/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","EmptyMessageContainer","CartDropdownContainer","CartItemsContainer","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC,C,CAEA;;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,kBAHF,QAIO,wBAJP;;AAMA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBACnB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAeC,QAAD,IAAc;AAC1B,sBAAO,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD,CADD,gBAKC,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANJ,CADF,EAWI;AACAL,SAAS,CAACG,MAAV,gBACE,oBAAC,YAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbF,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,GASI,IArBR,CADF;;AA2BA,MAAMa,eAAe,GAAGlB,wBAAwB,CAAC;AAC/CU,EAAAA,SAAS,EAAEN;AADoC,CAAD,CAAhD;AAGA;;;;;;;;;;;AAUA,eAAeH,UAAU,CAACF,OAAO,CAACmB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { createStructuredSelector } from \"reselect\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nimport CustomButton from \"../custom-button/custom-button.component\"\r\nimport CartItem from \"../cart-item/cart-item.component\"\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\"\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\"\r\n\r\n// import \"./cart-dropdown.styles.scss\"\r\nimport {\r\n  EmptyMessageContainer,\r\n  CartDropdownContainer,\r\n  CartItemsContainer,\r\n} from \"./cart-dropdown.styles\"\r\n\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\r\n  <CartDropdownContainer>\r\n    <CartItemsContainer>\r\n      {cartItems.length ? (\r\n        cartItems.map((cartItem) => {\r\n          return <CartItem key={cartItem.id} item={cartItem} />\r\n        })\r\n      ) : (\r\n        <EmptyMessageContainer>Dein Warenkorb ist leer</EmptyMessageContainer>\r\n      )}\r\n    </CartItemsContainer>\r\n    {\r\n      // .length ? is the same if statement as .length > 0\r\n      cartItems.length ? (\r\n        <CustomButton\r\n          onClick={() => {\r\n            history.push(\"/checkout\")\r\n            dispatch(toggleCartHidden())\r\n          }}\r\n        >\r\n          ZUR KASSE\r\n        </CustomButton>\r\n      ) : null\r\n    }\r\n  </CartDropdownContainer>\r\n)\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n})\r\n/**\r\n * HigherOrderComponents can take other HOC (like connect) as an argument\r\n * as HOC always return a component\r\n *\r\n * The order in how these HOC are passed in as arguments matters.\r\n * HOC calls will be evaluated from the inside out, same like math operations\r\n * In this way connect will be evaluated and then passes all its properties to withRouter\r\n * this is what we need, as we are looking for the hostory in withRouter to have access\r\n * to all properties that connect is aware of.\r\n */\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown))\r\n"]},"metadata":{},"sourceType":"module"}