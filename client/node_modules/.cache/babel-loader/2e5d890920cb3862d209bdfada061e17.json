{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { isCollectionsLoadedSelector } from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../../components/with-spinner/with.spinner.component\";\nimport CollectionPage from \"./collection.component\";\n/**\r\n * isLoading is passed in a function that gets the state as well as all other props\r\n * and passes its state into the selector\r\n */\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: state => !isCollectionsLoadedSelector(state)\n});\nconst CollectionPageContainer = compose(connect(mapStateToProps), WithSpinner)(CollectionPage);\nexport default CollectionPageContainer;","map":{"version":3,"sources":["D:/Coding/GitHub/React/guitar-store/client/src/pages/collection/collection.container.jsx"],"names":["connect","compose","createStructuredSelector","isCollectionsLoadedSelector","WithSpinner","CollectionPage","mapStateToProps","isLoading","state","CollectionPageContainer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,2BAAT,QAA4C,gCAA5C;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA;;;;;AAIA,MAAMC,eAAe,GAAGJ,wBAAwB,CAAC;AAC/CK,EAAAA,SAAS,EAAGC,KAAD,IAAW,CAACL,2BAA2B,CAACK,KAAD;AADH,CAAD,CAAhD;AAIA,MAAMC,uBAAuB,GAAGR,OAAO,CACrCD,OAAO,CAACM,eAAD,CAD8B,EAErCF,WAFqC,CAAP,CAG9BC,cAH8B,CAAhC;AAKA,eAAeI,uBAAf","sourcesContent":["import { connect } from \"react-redux\"\r\nimport { compose } from \"redux\"\r\nimport { createStructuredSelector } from \"reselect\"\r\n\r\nimport { isCollectionsLoadedSelector } from \"../../redux/shop/shop.selector\"\r\nimport WithSpinner from \"../../components/with-spinner/with.spinner.component\"\r\nimport CollectionPage from \"./collection.component\"\r\n\r\n/**\r\n * isLoading is passed in a function that gets the state as well as all other props\r\n * and passes its state into the selector\r\n */\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: (state) => !isCollectionsLoadedSelector(state),\r\n})\r\n\r\nconst CollectionPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage)\r\n\r\nexport default CollectionPageContainer\r\n"]},"metadata":{},"sourceType":"module"}