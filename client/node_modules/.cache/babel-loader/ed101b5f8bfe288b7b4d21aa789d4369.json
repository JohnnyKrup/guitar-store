{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { compose } from \"redux\";\nimport { isCollectionsFetchingSelector } from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../with-spinner/with.spinner.component\";\nimport CollectionsOverview from \"./collections-overview.component\";\nconst mapStateToProps = createStructuredSelector({\n  isLoading: isCollectionsFetchingSelector\n});\n/**\r\n * 1st WithSpinner will wrap around CollectionsOverview\r\n * 2nd We will receive our CollectionsOverviewWithSpinner component\r\n * 3rd CollectionsOverviewWithSpinner will be passed into connect, where State props are added to it\r\n *\r\n * This is hard to read, if there are more HOC that wrap the existing components\r\n * it will be even harder to read, therefore we use \"compose\" from redux\r\n */\n// const CollectionsOverviewContainer = connect(mapStateToProps)(\n//   WithSpinner(CollectionsOverview)\n// )\n\nconst CollectionsOverviewContainer = compose(connect(mapStateToProps), WithSpinner)(CollectionsOverview);\nexport default CollectionsOverviewContainer;","map":{"version":3,"sources":["D:/Coding/GitHub/React/guitar-store/src/components/collections-overview/collections-overview.container.jsx"],"names":["connect","createStructuredSelector","compose","isCollectionsFetchingSelector","WithSpinner","CollectionsOverview","mapStateToProps","isLoading","CollectionsOverviewContainer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,6BAAT,QAA8C,gCAA9C;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AAEA,MAAMC,eAAe,GAAGL,wBAAwB,CAAC;AAC/CM,EAAAA,SAAS,EAAEJ;AADoC,CAAD,CAAhD;AAIA;;;;;;;;AAQA;AACA;AACA;;AAEA,MAAMK,4BAA4B,GAAGN,OAAO,CAC1CF,OAAO,CAACM,eAAD,CADmC,EAE1CF,WAF0C,CAAP,CAGnCC,mBAHmC,CAArC;AAKA,eAAeG,4BAAf","sourcesContent":["import { connect } from \"react-redux\"\r\nimport { createStructuredSelector } from \"reselect\"\r\nimport { compose } from \"redux\"\r\n\r\nimport { isCollectionsFetchingSelector } from \"../../redux/shop/shop.selector\"\r\nimport WithSpinner from \"../with-spinner/with.spinner.component\"\r\nimport CollectionsOverview from \"./collections-overview.component\"\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: isCollectionsFetchingSelector,\r\n})\r\n\r\n/**\r\n * 1st WithSpinner will wrap around CollectionsOverview\r\n * 2nd We will receive our CollectionsOverviewWithSpinner component\r\n * 3rd CollectionsOverviewWithSpinner will be passed into connect, where State props are added to it\r\n *\r\n * This is hard to read, if there are more HOC that wrap the existing components\r\n * it will be even harder to read, therefore we use \"compose\" from redux\r\n */\r\n// const CollectionsOverviewContainer = connect(mapStateToProps)(\r\n//   WithSpinner(CollectionsOverview)\r\n// )\r\n\r\nconst CollectionsOverviewContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionsOverview)\r\n\r\nexport default CollectionsOverviewContainer\r\n"]},"metadata":{},"sourceType":"module"}