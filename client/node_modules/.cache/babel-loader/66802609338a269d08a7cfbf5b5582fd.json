{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\"; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBzwIgq2EN0x97xsz4vnww4HEyKrmTS__g\",\n  authDomain: \"gtar-db.firebaseapp.com\",\n  databaseURL: \"https://gtar-db.firebaseio.com\",\n  projectId: \"gtar-db\",\n  storageBucket: \"gtar-db.appspot.com\",\n  messagingSenderId: \"896629947935\",\n  appId: \"1:896629947935:web:d39368e812d9873ba91f2a\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n/**\r\n * QueryReference Objects do not hold the data, they have properties that tell us details about it,\r\n * or the method to get the Snapshot Object which gives us the data we are looking for.\r\n *\r\n * QueryReference === Info\r\n * QuerySnapshot === data\r\n *\r\n * userAuth will return 'null' if you are not signedIn\r\n *\r\n * @param {*} userAuth\r\n * @param {*} additionalData\r\n */\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  console.log(userRef);\n  const snapShot = await userRef.get(); // a test to check the return with a not existing user\n\n  console.log(snapShot);\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider).catch(error => {\n  console.log(error);\n});\nexport default firebase;\n/**\r\n * HOW TO ACCESS FIRESTORE DATA\r\n *\r\n * import firebase from \"firebase/app\"\r\n * import \"firebase/firestore\"\r\n *\r\n * const firestore = firebase.firestore()\r\n *\r\n * There are 2 ways to access the data with chained .collection() & .doc() functions or\r\n * with a complete path (string) inside a .collection() or .doc() function\r\n * The next 2 lines mean the same\r\n * firestore.collection(\"users\").doc(\"ZCYotcmUQHAELJR5MFV7\").collection(\"cartItems\").doc(\"JA60QXUOrLeQtv0QKoZ4\")\r\n * firestore.doc(\"users/ZCYotcmUQHAELJR5MFV7/cartItems/JA60QXUOrLeQtv0QKoZ4\")\r\n *\r\n * if you want a collection instead of a specifc item\r\n * firestore.collection(\"users/ZCYotcmUQHAELJR5MFV7/cartItems\")\r\n */","map":{"version":3,"sources":["D:/Coding/GitHub/React/guitar-store/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","console","log","snapShot","get","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","catch","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAO,oBAAP,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,yBAFS;AAGrBC,EAAAA,WAAW,EAAE,gCAHQ;AAIrBC,EAAAA,SAAS,EAAE,SAJU;AAKrBC,EAAAA,aAAa,EAAE,qBALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE;AAPc,CAAvB,C,CAUA;;AACAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;AAEA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB;AAEP;;;;;;;;;;;;;AAYA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAMK,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB,CAL2E,CAO3E;;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACD,CATM;AAWP,MAAME,QAAQ,GAAG,IAAItB,QAAQ,CAACU,IAAT,CAAca,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAC9BhB,IAAI,CAACiB,eAAL,CAAqBL,QAArB,EAA+BM,KAA/B,CAAsCC,KAAD,IAAW;AAC9CX,EAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,CAFD,CADK;AAKP,eAAe7B,QAAf;AAEA","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/analytics\"\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBzwIgq2EN0x97xsz4vnww4HEyKrmTS__g\",\r\n  authDomain: \"gtar-db.firebaseapp.com\",\r\n  databaseURL: \"https://gtar-db.firebaseio.com\",\r\n  projectId: \"gtar-db\",\r\n  storageBucket: \"gtar-db.appspot.com\",\r\n  messagingSenderId: \"896629947935\",\r\n  appId: \"1:896629947935:web:d39368e812d9873ba91f2a\",\r\n}\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\n/**\r\n * QueryReference Objects do not hold the data, they have properties that tell us details about it,\r\n * or the method to get the Snapshot Object which gives us the data we are looking for.\r\n *\r\n * QueryReference === Info\r\n * QuerySnapshot === data\r\n *\r\n * userAuth will return 'null' if you are not signedIn\r\n *\r\n * @param {*} userAuth\r\n * @param {*} additionalData\r\n */\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n  console.log(userRef)\r\n  const snapShot = await userRef.get()\r\n\r\n  // a test to check the return with a not existing user\r\n  console.log(snapShot)\r\n}\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({ prompt: \"select_account\" })\r\n\r\nexport const signInWithGoogle = () =>\r\n  auth.signInWithPopup(provider).catch((error) => {\r\n    console.log(error)\r\n  })\r\n\r\nexport default firebase\r\n\r\n/**\r\n * HOW TO ACCESS FIRESTORE DATA\r\n *\r\n * import firebase from \"firebase/app\"\r\n * import \"firebase/firestore\"\r\n *\r\n * const firestore = firebase.firestore()\r\n *\r\n * There are 2 ways to access the data with chained .collection() & .doc() functions or\r\n * with a complete path (string) inside a .collection() or .doc() function\r\n * The next 2 lines mean the same\r\n * firestore.collection(\"users\").doc(\"ZCYotcmUQHAELJR5MFV7\").collection(\"cartItems\").doc(\"JA60QXUOrLeQtv0QKoZ4\")\r\n * firestore.doc(\"users/ZCYotcmUQHAELJR5MFV7/cartItems/JA60QXUOrLeQtv0QKoZ4\")\r\n *\r\n * if you want a collection instead of a specifc item\r\n * firestore.collection(\"users/ZCYotcmUQHAELJR5MFV7/cartItems\")\r\n */\r\n"]},"metadata":{},"sourceType":"module"}