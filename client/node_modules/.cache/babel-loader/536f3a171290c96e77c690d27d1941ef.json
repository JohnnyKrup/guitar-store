{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub\\\\React\\\\guitar-store\\\\src\\\\pages\\\\shop\\\\shop.component.js\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { isCollectionFetchingSelector } from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../../components/with-spinner/with.spinner.component\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport Collection from \"../collection/collection.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n/**\r\n * we have access to the match property because in App.js\r\n * the ShopPage is <Route path=\"/shop\" component={ShopPage} /> passed as\r\n * a Component in a Route and automatically Route passes match / history / location as\r\n * properties to its component\r\n * @param {*} param0\r\n */\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  } // console.log(match)\n\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: isCollectionFetchingSelector\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/Coding/GitHub/React/guitar-store/src/pages/shop/shop.component.js"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","isCollectionFetchingSelector","WithSpinner","CollectionsOverview","Collection","CollectionsOverviewWithSpinner","CollectionWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,4BAAT,QAA6C,gCAA7C;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;AACA,MAAMG,qBAAqB,GAAGJ,WAAW,CAACE,UAAD,CAAzC;AAEA;;;;;;;;AAOA,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AACAV,IAAAA,0BAA0B;AAC3B,GAJoC,CAMrC;;;AACAW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,8BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAWE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,qBAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAuBD;;AAjCoC;;AAoCvC,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC/Ce,EAAAA,oBAAoB,EAAEZ;AADyB,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\nimport { createStructuredSelector } from \"reselect\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\"\r\nimport { isCollectionFetchingSelector } from \"../../redux/shop/shop.selector\"\r\n\r\nimport WithSpinner from \"../../components/with-spinner/with.spinner.component\"\r\n\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\"\r\nimport Collection from \"../collection/collection.component\"\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\r\nconst CollectionWithSpinner = WithSpinner(Collection)\r\n\r\n/**\r\n * we have access to the match property because in App.js\r\n * the ShopPage is <Route path=\"/shop\" component={ShopPage} /> passed as\r\n * a Component in a Route and automatically Route passes match / history / location as\r\n * properties to its component\r\n * @param {*} param0\r\n */\r\nclass ShopPage extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchCollectionsStartAsync } = this.props\r\n    fetchCollectionsStartAsync()\r\n  }\r\n\r\n  // console.log(match)\r\n  render() {\r\n    const { match, isCollectionFetching } = this.props\r\n\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={(props) => (\r\n            <CollectionsOverviewWithSpinner\r\n              isLoading={isCollectionFetching}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={(props) => (\r\n            <CollectionWithSpinner\r\n              isLoading={isCollectionFetching}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionFetching: isCollectionFetchingSelector,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)\r\n"]},"metadata":{},"sourceType":"module"}