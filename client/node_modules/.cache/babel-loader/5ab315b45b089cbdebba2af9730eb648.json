{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub\\\\React\\\\guitar-store\\\\src\\\\components\\\\sign-in\\\\sign-in.component.js\";\nimport React from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport \"./sign-in.styles.scss\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, signInWithGoogle } from \"../../firebase/firebase.utils\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      /**\r\n       * we want a custom submit handling, that's why we want\r\n       * to prevent the deafult behavior first and then code\r\n       * what we want the submit to do.\r\n       */\n      event.preventDefault();\n      /**\r\n       * For the email and pass sign-in process\r\n       * we need the email and password from this.state\r\n       */\n\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        // use the firebase method to sign in, if it does not work catch the error\n        await auth.signInWithEmailAndPassword(email, password); // if it worked, clear the form\n\n        this.setState({\n          email: \"\",\n          password: \"\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      /**\r\n       * if the event.target comes from the email field\r\n       * name: email / value: what was typed in into the email field\r\n       * same for password\r\n       *\r\n       * we set the property name dynamically, so that we don't\r\n       * have to write the same code for each input field\r\n       */\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n  /**\r\n   * For the sign in process with email and password\r\n   * we need to extend this method and make it async\r\n   * @param {*} event\r\n   */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Ich habe bereits ein Konto\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Mit Email und Passwort anmelden\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"Passwort\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"Anmelden\"), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: signInWithGoogle,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Mit Google anmelden\"))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["D:/Coding/GitHub/React/guitar-store/src/components/sign-in/sign-in.component.js"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAO,uBAAP;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,+BAAvC;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,YAdmB,GAcJ,MAAOC,KAAP,IAAiB;AAC9B;;;;;AAKAA,MAAAA,KAAK,CAACC,cAAN;AAEA;;;;;AAIA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;;AAEA,UAAI;AACF;AACA,cAAMX,IAAI,CAACY,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAN,CAFE,CAGF;;AACA,aAAKG,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAAd;AACD,OALD,CAKE,OAAOI,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KApCkB;;AAAA,SAsCnBG,YAtCmB,GAsCHV,KAAD,IAAW;AACxB,YAAM;AAAEW,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBZ,KAAK,CAACa,MAA9B;AACA;;;;;;;;;AAQA,WAAKP,QAAL,CAAc;AAAE,SAACM,IAAD,GAAQD;AAAV,OAAd;AACD,KAjDkB;;AAGjB,SAAKP,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;AAED;;;;;;;AA0CAW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,eAIE;AAAM,MAAA,QAAQ,EAAE,KAAKf,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAHpB;AAIE,MAAA,YAAY,EAAE,KAAKQ,YAJrB;AAKE,MAAA,KAAK,EAAC,OALR;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWD,QAHpB;AAIE,MAAA,YAAY,EAAE,KAAKO,YAJrB;AAKE,MAAA,KAAK,EAAC,UALR;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAkBE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEhB,gBAAvB;AAAyC,MAAA,cAAc,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CAlBF,CAJF,CADF;AAgCD;;AArFkC;;AAwFrC,eAAeC,MAAf","sourcesContent":["import React from \"react\"\r\nimport FormInput from \"../form-input/form-input.component\"\r\nimport \"./sign-in.styles.scss\"\r\nimport CustomButton from \"../custom-button/custom-button.component\"\r\nimport { auth, signInWithGoogle } from \"../../firebase/firebase.utils\"\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    }\r\n  }\r\n\r\n  /**\r\n   * For the sign in process with email and password\r\n   * we need to extend this method and make it async\r\n   * @param {*} event\r\n   */\r\n  handleSubmit = async (event) => {\r\n    /**\r\n     * we want a custom submit handling, that's why we want\r\n     * to prevent the deafult behavior first and then code\r\n     * what we want the submit to do.\r\n     */\r\n    event.preventDefault()\r\n\r\n    /**\r\n     * For the email and pass sign-in process\r\n     * we need the email and password from this.state\r\n     */\r\n    const { email, password } = this.state\r\n\r\n    try {\r\n      // use the firebase method to sign in, if it does not work catch the error\r\n      await auth.signInWithEmailAndPassword(email, password)\r\n      // if it worked, clear the form\r\n      this.setState({ email: \"\", password: \"\" })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { value, name } = event.target\r\n    /**\r\n     * if the event.target comes from the email field\r\n     * name: email / value: what was typed in into the email field\r\n     * same for password\r\n     *\r\n     * we set the property name dynamically, so that we don't\r\n     * have to write the same code for each input field\r\n     */\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sign-in\">\r\n        <h2>Ich habe bereits ein Konto</h2>\r\n        <span>Mit Email und Passwort anmelden</span>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={this.state.email}\r\n            handleChange={this.handleChange}\r\n            label=\"Email\"\r\n            required\r\n          />\r\n          <FormInput\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={this.state.password}\r\n            handleChange={this.handleChange}\r\n            label=\"Passwort\"\r\n            required\r\n          />\r\n\r\n          <div className=\"buttons\">\r\n            <CustomButton type=\"submit\">Anmelden</CustomButton>\r\n            <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\r\n              Mit Google anmelden\r\n            </CustomButton>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignIn\r\n"]},"metadata":{},"sourceType":"module"}