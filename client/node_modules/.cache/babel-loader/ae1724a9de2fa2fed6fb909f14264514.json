{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\"; // this gives us the actual localStorage from the Window object\n\nimport storage from \"redux-persist/lib/storage\";\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nconst persistConfig = {\n  // where we want to start to store data\n  // in our case from the root\n  key: \"root\",\n  // this is equal to storage: storage\n  // variable storage is whatever we imported from the storage in the imports\n  storage,\n  // an array of string names of which reducers should be persisted\n  // only the cart, as the user is stored in fireBase\n  whitelist: [\"cart\"]\n};\n/**\r\n * This root reducer will combine all the code\r\n * of all reducers in this project\r\n */\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["D:/Coding/GitHub/React/guitar-store/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","persistConfig","key","whitelist","rootReducer","user","cart"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,MAAMC,aAAa,GAAG;AACpB;AACA;AACAC,EAAAA,GAAG,EAAE,MAHe;AAIpB;AACA;AACAL,EAAAA,OANoB;AAOpB;AACA;AACAM,EAAAA,SAAS,EAAE,CAAC,MAAD;AATS,CAAtB;AAYA;;;;;AAIA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,IAAI,EAAEP,WAD4B;AAElCQ,EAAAA,IAAI,EAAEP;AAF4B,CAAD,CAAnC;AAKA,eAAeH,cAAc,CAACK,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from \"redux\"\r\nimport { persistReducer } from \"redux-persist\"\r\n// this gives us the actual localStorage from the Window object\r\nimport storage from \"redux-persist/lib/storage\"\r\n\r\nimport userReducer from \"./user/user.reducer\"\r\nimport cartReducer from \"./cart/cart.reducer\"\r\nimport directoryReducer from \"./directory/directory.reducer\"\r\n\r\nconst persistConfig = {\r\n  // where we want to start to store data\r\n  // in our case from the root\r\n  key: \"root\",\r\n  // this is equal to storage: storage\r\n  // variable storage is whatever we imported from the storage in the imports\r\n  storage,\r\n  // an array of string names of which reducers should be persisted\r\n  // only the cart, as the user is stored in fireBase\r\n  whitelist: [\"cart\"],\r\n}\r\n\r\n/**\r\n * This root reducer will combine all the code\r\n * of all reducers in this project\r\n */\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  cart: cartReducer,\r\n})\r\n\r\nexport default persistReducer(persistConfig, rootReducer)\r\n"]},"metadata":{},"sourceType":"module"}