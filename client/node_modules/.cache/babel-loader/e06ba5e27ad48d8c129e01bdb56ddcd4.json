{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport memoize from \"lodash.memoize\";\nconst COLLECTION_ID_MAP = {\n  konzert: 1000,\n  flamenco: 2000,\n  kinder: 3000,\n  western: 4000,\n  meister: 5000\n};\n\nconst shopSelector = state => state.shop;\n\nexport const collectionsSelector = createSelector([shopSelector], shop => shop.collections);\n/**\r\n * collectionUrlParam is a string i.e. 'western'\r\n * and we try to find the matching collection ID with the\r\n * find() function, where we get back the collection that the collection.id\r\n * macthes the numeric value of the collectionUrlParam\r\n * @param {*} collectionUrlParam\r\n */\n\nexport const collectionSelector = memoize(collectionUrlParam => createSelector([collectionsSelector], collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])));","map":{"version":3,"sources":["D:/Coding/GitHub/React/guitar-store/src/redux/shop/shop.selector.js"],"names":["createSelector","memoize","COLLECTION_ID_MAP","konzert","flamenco","kinder","western","meister","shopSelector","state","shop","collectionsSelector","collections","collectionSelector","collectionUrlParam","find","collection","id"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,OAAO,EAAE,IADe;AAExBC,EAAAA,QAAQ,EAAE,IAFc;AAGxBC,EAAAA,MAAM,EAAE,IAHgB;AAIxBC,EAAAA,OAAO,EAAE,IAJe;AAKxBC,EAAAA,OAAO,EAAE;AALe,CAA1B;;AAQA,MAAMC,YAAY,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAtC;;AAEA,OAAO,MAAMC,mBAAmB,GAAGX,cAAc,CAC/C,CAACQ,YAAD,CAD+C,EAE9CE,IAAD,IAAUA,IAAI,CAACE,WAFgC,CAA1C;AAKP;;;;;;;;AAOA,OAAO,MAAMC,kBAAkB,GAAGZ,OAAO,CAAEa,kBAAD,IACxCd,cAAc,CAAC,CAACW,mBAAD,CAAD,EAAyBC,WAAD,IACpCA,WAAW,CAACG,IAAZ,CACGC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBf,iBAAiB,CAACY,kBAAD,CADrD,CADY,CADyB,CAAlC","sourcesContent":["import { createSelector } from \"reselect\"\r\nimport memoize from \"lodash.memoize\"\r\n\r\nconst COLLECTION_ID_MAP = {\r\n  konzert: 1000,\r\n  flamenco: 2000,\r\n  kinder: 3000,\r\n  western: 4000,\r\n  meister: 5000,\r\n}\r\n\r\nconst shopSelector = (state) => state.shop\r\n\r\nexport const collectionsSelector = createSelector(\r\n  [shopSelector],\r\n  (shop) => shop.collections\r\n)\r\n\r\n/**\r\n * collectionUrlParam is a string i.e. 'western'\r\n * and we try to find the matching collection ID with the\r\n * find() function, where we get back the collection that the collection.id\r\n * macthes the numeric value of the collectionUrlParam\r\n * @param {*} collectionUrlParam\r\n */\r\nexport const collectionSelector = memoize((collectionUrlParam) =>\r\n  createSelector([collectionsSelector], (collections) =>\r\n    collections.find(\r\n      (collection) => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\r\n    )\r\n  )\r\n)\r\n"]},"metadata":{},"sourceType":"module"}